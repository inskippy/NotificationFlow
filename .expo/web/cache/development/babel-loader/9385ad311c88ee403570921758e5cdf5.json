{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/adam/Documents/UofR/CSC211/NotificationFlow/components/SendNotificationScreen.js\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nexport default function SendNotificationScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      appName = _useState2[0],\n      setAppname = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      notifText = _useState4[0],\n      setNotifText = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      timeRec = _useState6[0],\n      setTimeRec = _useState6[1];\n\n  var submit = function submit(event) {\n    event.preventDefault();\n    alert(\"appName: \" + appName + \" notifText: \" + notifText + \" timeRec: \" + timeRec);\n    addToImportant();\n  };\n\n  var addToImportant = function addToImportant() {\n    props.notifArrays.setImportantNotifs([].concat(_toConsumableArray(props.notifArrays.importantNotifs), [{\n      id: props.notifArrays.importantNotifs.length,\n      AppName: appName,\n      NotificationText: notifText,\n      TimeReceived: timeRec\n    }]));\n  };\n\n  var addToUnimportant = function addToUnimportant() {\n    props.notifArrays.setUnimportantNotifs([].concat(_toConsumableArray(props.notifArrays.unimportantNotifs), [{\n      id: props.notifArrays.unimportantNotifs.length,\n      AppName: appName,\n      NotificationText: notifText,\n      TimeReceived: timeRec\n    }]));\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"AppName\",\n    onChangeText: function onChangeText(appName) {\n      return setAppname(appName);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"NotificationText\",\n    onChangeText: function onChangeText(notifText) {\n      return setNotifText(notifText);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"TimeReceived\",\n    onChangeText: function onChangeText(timeRec) {\n      return setTimeRec(timeRec);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Send notification\",\n    onPress: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/home/adam/Documents/UofR/CSC211/NotificationFlow/components/SendNotificationScreen.js"],"names":["React","useState","SendNotificationScreen","props","appName","setAppname","notifText","setNotifText","timeRec","setTimeRec","submit","event","preventDefault","alert","addToImportant","notifArrays","setImportantNotifs","importantNotifs","id","length","AppName","NotificationText","TimeReceived","addToUnimportant","setUnimportantNotifs","unimportantNotifs","flex","justifyContent","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAGA,eAAe,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA,kBACpBF,QAAQ,CAAC,EAAD,CADY;AAAA;AAAA,MAC3CG,OAD2C;AAAA,MAClCC,UADkC;;AAAA,mBAEhBJ,QAAQ,CAAC,EAAD,CAFQ;AAAA;AAAA,MAE3CK,SAF2C;AAAA,MAEhCC,YAFgC;;AAAA,mBAGpBN,QAAQ,CAAC,EAAD,CAHY;AAAA;AAAA,MAG3CO,OAH2C;AAAA,MAGlCC,UAHkC;;AAKlD,MAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACpBA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,KAAK,CAAC,cAAcT,OAAd,GAAwB,cAAxB,GAAyCE,SAAzC,GAAqD,YAArD,GAAoEE,OAArE,CAAL;AAEAM,IAAAA,cAAc;AACf,GALH;;AAOE,MAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BX,IAAAA,KAAK,CAACY,WAAN,CAAkBC,kBAAlB,8BACOb,KAAK,CAACY,WAAN,CAAkBE,eADzB,IAEI;AACEC,MAAAA,EAAE,EAAEf,KAAK,CAACY,WAAN,CAAkBE,eAAlB,CAAkCE,MADxC;AAEEC,MAAAA,OAAO,EAAEhB,OAFX;AAGEiB,MAAAA,gBAAgB,EAAEf,SAHpB;AAIEgB,MAAAA,YAAY,EAAEd;AAJhB,KAFJ;AASD,GAVD;;AAYA,MAAMe,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BpB,IAAAA,KAAK,CAACY,WAAN,CAAkBS,oBAAlB,8BACOrB,KAAK,CAACY,WAAN,CAAkBU,iBADzB,IAEI;AACEP,MAAAA,EAAE,EAAEf,KAAK,CAACY,WAAN,CAAkBU,iBAAlB,CAAoCN,MAD1C;AAEEC,MAAAA,OAAO,EAAEhB,OAFX;AAGEiB,MAAAA,gBAAgB,EAAEf,SAHpB;AAIEgB,MAAAA,YAAY,EAAEd;AAJhB,KAFJ;AASD,GAVD;;AAYF,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEkB,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,SAAvB;AAAiC,IAAA,YAAY,EAAE,sBAAAxB,OAAO;AAAA,aAAIC,UAAU,CAACD,OAAD,CAAd;AAAA,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,kBAAvB;AAA0C,IAAA,YAAY,EAAE,sBAAAE,SAAS;AAAA,aAAIC,YAAY,CAACD,SAAD,CAAhB;AAAA,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,cAAvB;AAAsC,IAAA,YAAY,EAAE,sBAAAE,OAAO;AAAA,aAAIC,UAAU,CAACD,OAAD,CAAd;AAAA,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,mBAAd;AAAkC,IAAA,OAAO,EAAEE,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQH","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Text, View, Alert, TextInput } from 'react-native';\n\nexport default function SendNotificationScreen(props) {\n    const [appName, setAppname] = useState(\"\");\n    const [notifText, setNotifText] = useState(\"\");\n    const [timeRec, setTimeRec] = useState(\"\");\n    \n    const submit = event => {\n        event.preventDefault();\n        alert(\"appName: \" + appName + \" notifText: \" + notifText + \" timeRec: \" + timeRec)\n        // some logic here - apply filters, add to important/unimportant\n        addToImportant();\n      }\n\n      const addToImportant = () => {\n        props.notifArrays.setImportantNotifs([\n            ...props.notifArrays.importantNotifs,\n            {\n              id: props.notifArrays.importantNotifs.length,\n              AppName: appName,\n              NotificationText: notifText,\n              TimeReceived: timeRec\n            }\n          ])\n      }\n\n      const addToUnimportant = () => {\n        props.notifArrays.setUnimportantNotifs([\n            ...props.notifArrays.unimportantNotifs,\n            {\n              id: props.notifArrays.unimportantNotifs.length,\n              AppName: appName,\n              NotificationText: notifText,\n              TimeReceived: timeRec\n            }\n          ])\n      }\n\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <TextInput placeholder=\"AppName\" onChangeText={appName => setAppname(appName)} />\n        <TextInput placeholder=\"NotificationText\" onChangeText={notifText => setNotifText(notifText)} />\n        <TextInput placeholder=\"TimeReceived\" onChangeText={timeRec => setTimeRec(timeRec)} />\n        <Button title=\"Send notification\" onPress={submit} />\n      </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/alejandro/Desktop/NotificationFlow/components/SettingsScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Checkbox from \"./Checkbox\";\nimport { Notification } from \"./Notification.js\";\nimport TimeRangePicker from '@wojtekmaj/react-timerange-picker';\nvar OPTIONS = [\"Mail\", \"Slack\", \"LinkedIn\", \"Snapchat\", \"Facebook\", \"Instagram\"];\nvar now = new Date();\nvar nextHour = new Date();\nexport default function SettingsScreen() {\n  var _this = this;\n\n  var _useState = useState([now, nextHour]),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      onChange = _useState2[1];\n\n  state = {\n    checkboxes: OPTIONS.reduce(function (options, option) {\n      return _objectSpread(_objectSpread({}, options), {}, _defineProperty({}, option, false));\n    }, {})\n  };\n\n  handleCheckboxChange = function handleCheckboxChange(changeEvent) {\n    var name = changeEvent.target.name;\n\n    _this.setState(function (prevState) {\n      return {\n        checkboxes: _objectSpread(_objectSpread({}, prevState.checkboxes), {}, _defineProperty({}, name, !prevState.checkboxes[name]))\n      };\n    });\n  };\n\n  handleFormSubmit = function handleFormSubmit(formSubmitEvent) {\n    formSubmitEvent.preventDefault();\n    Object.keys(_this.state.checkboxes).filter(function (checkbox) {\n      return _this.state.checkboxes[checkbox];\n    }).forEach(function (checkbox) {\n      console.log(checkbox, \"is selected.\");\n    });\n  };\n\n  createCheckbox = function createCheckbox(option) {\n    return React.createElement(Checkbox, {\n      label: option,\n      isSelected: _this.state.checkboxes[option],\n      onCheckboxChange: _this.handleCheckboxChange,\n      key: option,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    });\n  };\n\n  createCheckboxes = function createCheckboxes() {\n    return OPTIONS.map(_this.createCheckbox);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Time-based Filtering\"), React.createElement(TimeRangePicker, {\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), \" \", React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 18\n    }\n  }), \" \", React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"App-based Filtering\"), React.createElement(\"form\", {\n    onSubmit: App.handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, createCheckboxes(), React.createElement(\"div\", {\n    className: \"form-group mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Save\"))))));\n}\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this2;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      checkboxes: OPTIONS.reduce(function (options, option) {\n        return _objectSpread(_objectSpread({}, options), {}, _defineProperty({}, option, false));\n      }, {})\n    };\n\n    _this2.handleCheckboxChange = function (changeEvent) {\n      var name = changeEvent.target.name;\n\n      _this2.setState(function (prevState) {\n        return {\n          checkboxes: _objectSpread(_objectSpread({}, prevState.checkboxes), {}, _defineProperty({}, name, !prevState.checkboxes[name]))\n        };\n      });\n    };\n\n    _this2.handleFormSubmit = function (formSubmitEvent) {\n      formSubmitEvent.preventDefault();\n      Object.keys(_this2.state.checkboxes).filter(function (checkbox) {\n        return _this2.state.checkboxes[checkbox];\n      }).forEach(function (checkbox) {\n        console.log(checkbox, \"is selected.\");\n      });\n    };\n\n    _this2.createCheckbox = function (option) {\n      return React.createElement(Checkbox, {\n        label: option,\n        isSelected: _this2.state.checkboxes[option],\n        onCheckboxChange: _this2.handleCheckboxChange,\n        key: option,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 5\n        }\n      });\n    };\n\n    _this2.createCheckboxes = function () {\n      return OPTIONS.map(_this2.createCheckbox);\n    };\n\n    return _this2;\n  }\n\n  return App;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1',\n    padding: 8\n  },\n  label: {\n    marginLeft: 5,\n    marginBottom: 10,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  }\n});","map":{"version":3,"sources":["/Users/alejandro/Desktop/NotificationFlow/components/SettingsScreen.js"],"names":["React","Component","useState","Checkbox","Notification","TimeRangePicker","OPTIONS","now","Date","nextHour","SettingsScreen","value","onChange","state","checkboxes","reduce","options","option","handleCheckboxChange","changeEvent","name","target","setState","prevState","handleFormSubmit","formSubmitEvent","preventDefault","Object","keys","filter","checkbox","forEach","console","log","createCheckbox","createCheckboxes","map","styles","container","label","App","StyleSheet","create","flex","justifyContent","backgroundColor","padding","marginLeft","marginBottom","fontSize","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { Text, View, StyleSheet } from 'react-native';\nimport Checkbox from \"./Checkbox\";\nimport { Notification } from './Notification.js';\nimport TimeRangePicker from '@wojtekmaj/react-timerange-picker';\n\nconst OPTIONS = [\"Mail\", \"Slack\", \"LinkedIn\", \"Snapchat\", \"Facebook\", \"Instagram\"];\nconst now = new Date();\nconst nextHour = new Date();\n\nexport default function SettingsScreen() {\n  const [value, onChange] = useState([now, nextHour]);\n\n  state = {\n    checkboxes: OPTIONS.reduce(\n      (options, option) => ({\n        ...options,\n        [option]: false\n      }),\n      {}\n    )\n  };\n\n  handleCheckboxChange = changeEvent => {\n    const { name } = changeEvent.target;\n\n    this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [name]: !prevState.checkboxes[name]\n      }\n    }));\n  };\n\n  handleFormSubmit = formSubmitEvent => {\n    formSubmitEvent.preventDefault();\n\n    Object.keys(this.state.checkboxes)\n      .filter(checkbox => this.state.checkboxes[checkbox])\n      .forEach(checkbox => {\n        console.log(checkbox, \"is selected.\");\n      });\n  };\n\n  createCheckbox = option => (\n    <Checkbox\n      label={option}\n      isSelected={this.state.checkboxes[option]}\n      onCheckboxChange={this.handleCheckboxChange}\n      key={option}\n    />\n  );\n\n  createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n  \n  return (\n    <View style = {styles.container}>\n\n      <div className=\"row mt-5\">\n\n        <div className=\"col-sm-12\">\n\n          <Text style={styles.label}>Time-based Filtering</Text>\n          <TimeRangePicker\n          onChange={onChange}\n          />\n\n          <br /> <br /> <br />\n\n\n          <Text style={styles.label}>App-based Filtering</Text>\n            <form onSubmit={App.handleFormSubmit}>\n              {createCheckboxes()}\n              <div className=\"form-group mt-2\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Save\n                </button>\n\n            </div>\n            \n          </form>\n\n        </div>\n\n      </div>\n\n    </View>\n  );\n}\n\nclass App extends Component \n{\n  state = {\n    checkboxes: OPTIONS.reduce(\n      (options, option) => ({\n        ...options,\n        [option]: false\n      }),\n      {}\n    )\n  };\n\n  handleCheckboxChange = changeEvent => {\n    const { name } = changeEvent.target;\n\n    this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [name]: !prevState.checkboxes[name]\n      }\n    }));\n  };\n\n  handleFormSubmit = formSubmitEvent => {\n    formSubmitEvent.preventDefault();\n\n    Object.keys(this.state.checkboxes)\n      .filter(checkbox => this.state.checkboxes[checkbox])\n      .forEach(checkbox => {\n        console.log(checkbox, \"is selected.\");\n      });\n  };\n\n  createCheckbox = option => (\n    <Checkbox\n      label={option}\n      isSelected={this.state.checkboxes[option]}\n      onCheckboxChange={this.handleCheckboxChange}\n      key={option}\n    />\n  );\n\n  createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n    \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1',\n    padding: 8,\n  },\n  label: {\n    //margin: 24,\n    marginLeft: 5,\n    marginBottom: 10,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'left',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}